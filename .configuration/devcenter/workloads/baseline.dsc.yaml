properties:
  configurationVersion: 0.2.0

  ########################################
  ### RESOURCES: System Configuration
  ########################################
  resources:
    ########################################################
    ### Updates required before applying configurations
    ########################################################
    ### Install PSDscResources
    ### Enable: WinGet
    ### Enable: AppInstaller
    ### Enable: AppInstallerFileBuilder
    ### Enable: DevHome
    ### Enable: DevHome Azure Extension
    ### Enable: DevHome GitHub Extension
    ### Install: Git
    ### Install: GitHub.CLI
    ### Install: GitHub.GitHubDesktop
    ### Enable: Developer Mode
    ### Install: Windows Terminal
    ### Install: Microsoft.Office
    ########################################################

    ### Install PSDscResources
    ### -------------------------------------
    - resource: PSDscResources/Script
      id: PSDscResources
      directives:
        description: Install PSDscResources
        allowPrerelease: true
      settings:
        SetScript: |
          Install-Module -Name PSDscResources -Force -AllowClobber
        GetScript: return $false
        TestScript: return $false

    ### Enable WinGet
    ### -------------------------------------
    - resource: PSDscResources/Script
      id: Microsoft.AppInstaller
      directives:
        description: Install Microsoft.AppInstaller
      settings:
        SetScript: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
          winget install Microsoft.AppInstaller --accept-package-agreements --accept-source-agreements --verbose --force
        GetScript: return $false
        TestScript: return $false
      dependsOn:
        - PSDscResources

    ### Enable AppInstaller
    ### -------------------------------------
    - resource: PSDscResources/Script
      id: Microsoft.AppInstallerFileBuilder
      directives:
        description: Install Microsoft.AppInstallerFileBuilder
      settings:
        SetScript: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
          winget install Microsoft.AppInstallerFileBuilder --accept-package-agreements --accept-source-agreements --verbose --force
        GetScript: return $false
        TestScript: return $false
      dependsOn:
        - Microsoft.AppInstaller

    ### Enable DevHome
    ### -------------------------------------
    - resource: PSDscResources/Script
      id: Microsoft.DevHome
      directives:
        description: Install Microsoft.DevHome
      settings:
        SetScript: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
          winget install Microsoft.DevHome --accept-package-agreements --accept-source-agreements --verbose --force
        GetScript: return $false
        TestScript: return $false
      dependsOn:
        - Microsoft.AppInstaller

    ### Enable DevHome Azure Extension
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.DevHome.AzureExtension
      directives:
        description: Install Microsoft.DevHome Azure Extension
        allowPrerelease: true
      settings:
        id: "9MV8F79FGXTR"
        source: msstore
      dependsOn:
        - Microsoft.DevHome

    ### Enable DevHome GitHub Extension
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.DevHome.GitHubExtension
      directives:
        description: Install Microsoft.DevHome GitHub Extension
        allowPrerelease: true
      settings:
        id: "9NZCC27PR6N6"
        source: msstore
      dependsOn:
        - Microsoft.DevHome

    ### Enable Developer Mode
    ### -------------------------------------
    - resource: Microsoft.Windows.Developer/DeveloperMode
      id: DeveloperMode
      directives:
        description: Enable Developer Mode
        allowPrerelease: true
      settings:
        Ensure: Present

    ### Install Git
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Git.Git
      directives:
        description: Install Git
        allowPrerelease: true
      settings:
        id: Git.Git

    ### Install GitHub CLI
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: GitHub.CLI
      directives:
        description: Install GitHub CLI
        allowPrerelease: true
      settings:
        id: GitHub.CLI

    ### Install GitHub Desktop
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: GitHub.GitHubDesktop
      directives:
        description: Install GitHub Desktop
        allowPrerelease: true
      settings:
        id: GitHub.GitHubDesktop

    ### Install Windows Terminal
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.WindowsTerminal
      directives:
        description: Install Windows Terminal
        allowPrerelease: true
      settings:
        id: Microsoft.WindowsTerminal

    ### Install Microsoft Office
    ### -------------------------------------
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.Office
      directives:
        description: Install Microsoft Office
        allowPrerelease: true
      settings:
        id: Microsoft.Office

    ### Enable WinGet
    ### -------------------------------------
    - resource: PSDscResources/Script
      id: Winget.Update
      directives:
        description: Update all packages using WinGet
      settings:
        SetScript: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
          winget upgrade --all --accept-package-agreements --accept-source-agreements --silent
        GetScript: return $false
        TestScript: return $false
      dependsOn:
        - Microsoft.Office