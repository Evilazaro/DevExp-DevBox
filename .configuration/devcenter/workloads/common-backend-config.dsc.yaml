# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
#
# Azure DevBox Backend Development Configuration
# =============================================
#
# Purpose:
#   This DSC configuration installs essential tools for Azure backend development including:
#   - Source control tools (GitHub Desktop)
#   - Azure command-line tools (CLI, AZD, Bicep)
#   - Local development emulators for Azure services
#
# Best Practices:
#   - All tools are installed via WinGet for consistent versioning
#   - Dependencies are explicitly declared to ensure proper installation order
#   - Tools are grouped logically by purpose
#
properties:
  configurationVersion: "0.2.0"
  resources:
    #----------------------------------------------
    # Azure Command-Line Tools
    #----------------------------------------------
    # Azure CLI is the foundation for Azure management and serves as a dependency for other Azure tools
    # It provides command-line access to nearly all Azure service operations
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.AzureCLI
      directives:
        allowPrerelease: true
        description: Install Azure CLI for managing Azure resources from the command line
      settings:
        id: Microsoft.AzureCLI

    # Azure Developer CLI (azd) simplifies application development workflow with templates
    # and integrated deployment capabilities
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.Azd
      directives:
        allowPrerelease: true
        description: Install Azure Developer CLI (azd) for end-to-end application development
      settings:
        id: Microsoft.Azd
      dependsOn:
        - Microsoft.AzureCLI # AZD requires Azure CLI to function properly

    # Bicep provides a domain-specific language for deploying Azure resources
    # with improved syntax over ARM templates
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.Bicep
      directives:
        allowPrerelease: true
        description: Install Bicep CLI for Infrastructure as Code development on Azure
      settings:
        id: Microsoft.Bicep
      dependsOn:
        - Microsoft.AzureCLI # Bicep extensions use Azure CLI for deployment

    # Azure Data CLI offers specialized commands for working with Azure data services
    # including databases, storage, and analytics
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.Azure.DataCLI
      directives:
        allowPrerelease: true
        description: Install Azure Data CLI for managing Azure data services
      settings:
        id: Microsoft.Azure.DataCLI

    #----------------------------------------------
    # Local Development Emulators
    #----------------------------------------------
    # Azure Storage Emulator provides a local environment for testing Azure Storage applications
    # without requiring an Azure subscription for development
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.Azure.StorageEmulator
      directives:
        allowPrerelease: true
        description: Install Azure Storage Emulator for local development
      settings:
        id: Microsoft.Azure.StorageEmulator

    # Azure Cosmos DB Emulator provides a local instance of the Cosmos DB service
    # supporting multiple data models (SQL, MongoDB, Gremlin, etc.)
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.Azure.CosmosEmulator
      directives:
        allowPrerelease: true
        description: Install Azure Cosmos DB Emulator for local NoSQL database development
      settings:
        id: Microsoft.Azure.CosmosEmulator
