# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
#
# Common Configuration Sample for .NET Engineers
# =================================
#
# Purpose:
#   This DSC configuration sets up a standard development environment with:
#   - Development storage using Dev Drive
#   - Source control tools (Git, GitHub CLI)
#   - Development runtimes (.NET 9 SDK and Runtime)
#   - Development tools (VS Code, Node.js)
#
# Prerequisites:
#   - Windows 10/11 with admin privileges
#   - Internet connectivity for package downloads
#
# Maintainers: DevExp Team

properties:
  configurationVersion: "0.2.0"
  resources:
    #----------------------------------------------
    # Source Control Tools
    #----------------------------------------------
    # Resource: Git
    # Git is essential for workflows, enabling developers to work with
    # source code repositories, CI/CD pipelines, and infrastructure as code.
    #
    # Azure-specific considerations:
    # - Supports Azure DevOps repositories and GitHub integration
    # - Required for Azure Bicep template development and versioning
    # - Enables GitOps workflows with Azure Arc and Azure Kubernetes Service
    # - Optimized when used with Dev Drive for performance
    #
    # Will be used by:
    # - Azure CLI when working with Azure Repos
    # - GitHub CLI for GitHub-hosted Azure projects
    # - Azure Developer CLI (azd) for project templates
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Git.Git
      directives:
        allowPrerelease: true
        description: Install Git version control system
      settings:
        id: Git.Git

    # Resource: GitHub CLI
    # GitHub CLI streamlines GitHub workflow automation directly from the terminal,
    # enabling efficient Azure DevOps integration and GitHub Actions management.
    #
    # Azure-specific benefits:
    # - Manage GitHub repositories that host Azure infrastructure code
    # - Create and manage GitHub Actions workflows for Azure deployments
    # - Work with GitHub issues and pull requests for Azure service development
    # - Authenticate to GitHub Container Registry for Azure container deployments
    #
    # Security note:
    # - Authentication tokens are stored securely in Windows Credential Manager
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: GitHub.cli
      directives:
        allowPrerelease: true
        description: Install GitHub command-line interface
      settings:
        id: GitHub.cli
      dependsOn:
        - Git.Git # Requires Git for full functionality

    #----------------------------------------------
    # Development Runtimes
    #----------------------------------------------
    # Resource: .NET SDK 9
    # The .NET SDK is core to Azure development, providing the tools needed to build,
    # test, and deploy applications targeting Azure services.
    #
    # Azure-specific features:
    # - Azure SDK integration for Azure services
    # - Built-in templates for Azure Functions and Web Apps
    # - Support for containerized applications on Azure Container Apps
    # - Tools for Azure Active Directory integration
    # - Azure-optimized middleware components
    #
    # Performance note:
    # - Benefits from Dev Drive configuration for large solution files
    # - Includes .NET CLI tools for Azure Functions development
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.DotNet.SDK.9
      directives:
        allowPrerelease: true
        description: Install .NET 9 SDK for application development
      settings:
        id: Microsoft.DotNet.SDK.9

    # Resource: .NET Runtime 9
    # The .NET Runtime enables execution of .NET applications and is required
    # for running Azure tooling that depends on .NET.
    #
    # Azure-specific considerations:
    # - Required by many Azure command-line tools (Azure PowerShell, etc.)
    # - Supports running Azure Functions core tools locally
    # - Needed for Azure Storage Emulator and other local emulators
    # - Enables testing of containerized .NET applications before Azure deployment
    #
    # Note: While included in the SDK, explicit installation ensures availability
    # for tools that may require the runtime directly
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.DotNet.Runtime.9
      directives:
        allowPrerelease: true
        description: Install .NET 9 Runtime
      settings:
        id: Microsoft.DotNet.Runtime.9
      dependsOn:
        - Microsoft.DotNet.SDK.9 # Runtime is included in SDK, but explicit dependency ensures correct order

    # Resource: Node.js
    # Node.js is a JavaScript runtime environment essential for modern web development
    # and crucial for many Azure development scenarios.
    #
    # Azure-specific benefits:
    # - Required for Azure Static Web Apps local development
    # - Used by Azure Functions for JavaScript/TypeScript functions
    # - Powers npm packages for Azure SDK for JavaScript
    # - Enables local development of Azure App Service Node.js applications
    # - Required for many Azure DevOps build pipelines
    #
    # Security note:
    # - WinGet installation ensures secure, verified package source
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: OpenJS.NodeJS
      directives:
        allowPrerelease: true
        description: Install Node.js JavaScript runtime
      settings:
        id: OpenJS.NodeJS

    #----------------------------------------------
    # Development Tools
    #----------------------------------------------
    # Resource: Visual Studio Code
    # VS Code is Microsoft's recommended editor for Azure development with
    # extensive Azure service integration through extensions.
    #
    # Azure-specific capabilities:
    # - Direct Azure resource management through Azure extensions
    # - Integrated terminal for Azure CLI and PowerShell commands
    # - Azure Functions local development and debugging
    # - Azure App Service deployment integration
    # - Cosmos DB explorer and Storage explorer integrations
    # - ARM template and Bicep authoring and validation
    #
    # Note: Additional Azure extensions will be installed in separate configurations
    # to provide targeted functionality for specific development scenarios
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.VisualStudioCode
      directives:
        allowPrerelease: true
        description: Install Visual Studio Code editor
      settings:
        id: Microsoft.VisualStudioCode
