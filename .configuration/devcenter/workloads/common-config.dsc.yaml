# This DSC configuration installs and configures the following:
# - Enables Developer Mode on the system.
# - Installs Git, GitHub CLI, GitHub Desktop, and Windows Terminal using WinGet.
# - Configures Git to use the default WAM account for authentication.
# - Sets up a Dev Drive with ReFS format for development purposes.
# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2

properties:
  configurationVersion: "0.2.0"
  resources:
    # Insstalls the required DSC resources
    - resource: PSDscResources/Script
      id: PSDscResources
      directives:
        description: Install the required DSC resources
        securityContext: elevated
        allowPrerelease: true
      settings:
        SetScript: |
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User") 
          Set-ExecutionPolicy Bypass -Scope LocalMachine -Force
          Install-PackageProvider -Name NuGet -Scope AllUsers -Force | Out-Null
          Install-Module -Name Microsoft.WinGet.Client -Scope AllUsers -Force -Repository PSGallery | Out-Null
        GetScript: return $false
        TestScript: return $false

    # Enable Developer Mode on the system
    - resource: Microsoft.Windows.Developer/DeveloperMode
      id: DeveloperMode
      directives:
        description: Enable Developer Mode
        securityContext: elevated
        allowPrerelease: true
      settings:
        ensure: present

    # Install Git using WinGet
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Git.Git
      directives:
        description: Install Git
        securityContext: elevated
        allowPrerelease: true
      settings:
        id: Git.Git

    # Configure Git to use the default WAM account
    - resource: PSDscResources/Script
      id: Git.GitCredentialManager
      directives:
        description: Configure Git to use Default WAM account
        securityContext: elevated
        allowPrerelease: true
      settings:
        SetScript: |
          $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User") 
          SET GCM_MSAUTH_USEDEFAULTACCOUNT="true"
          git config --global credential.msauthUseDefaultAccount true
        GetScript: return $false
        TestScript: return $false
      dependsOn:
        - Git.Git

    # Install GitHub CLI using WinGet
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: GitHub.cli
      directives:
        description: Install GitHub CLI
        securityContext: elevated
        allowPrerelease: true
      settings:
        id: GitHub.cli
      dependsOn:
        - Git.Git

    # Install GitHub Desktop using WinGet
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: GitHub.GitHubDesktop
      directives:
        description: Install GitHub Desktop
        securityContext: elevated
        allowPrerelease: true
      settings:
        id: GitHub.GitHubDesktop

    # Install Windows Terminal using WinGet
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.WindowsTerminal
      directives:
        description: Install Windows Terminal
        securityContext: elevated
        allowPrerelease: true
      settings:
        id: Microsoft.WindowsTerminal

    # Configure a Dev Drive with ReFS format
    - resource: Disk
      id: DevDrive1
      directives:
        module: StorageDsc
        allowPrerelease: true
        description: Configure Dev Drive with ReFS format
      settings:
        DiskId: "0"
        DiskIdType: "Number"
        DriveLetter: "Z"
        FSLabel: "Dev Drive 1"
        DevDrive: true
        AllowDestructive: true
        FSFormat: "ReFS"
        Size: "50Gb"
      dependsOn:
        - DeveloperMode
