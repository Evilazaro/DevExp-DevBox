# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
properties:
  configurationVersion: "0.2.0"
  # This DSC configuration implements the following:
  # - Sets up a Dev Drive with ReFS format optimized for development workloads
  # - Installs Git and configures it for Windows Authentication Manager integration
  # - Installs GitHub CLI for command-line GitHub operations
  # - Installs GitHub Desktop for GUI-based repository management
  # - Installs .NET SDK 9 for .NET development
  # - Installs .NET Runtime 9 for running .NET applications
  # - Installs Visual Studio Code as the primary code editor
  resources:
    # Configure Dev Drive
    # Creates a 50GB ReFS-formatted drive optimized for development workloads
    # The drive is assigned letter Z and labeled "Dev Drive 1"
    - resource: Disk
      id: DevDrive1
      directives:
        module: StorageDsc
        allowPrerelease: true
        description: Configure Dev Drive with ReFS format
      settings:
        DiskId: "0"
        DiskIdType: "Number"
        DriveLetter: "Z"
        FSLabel: "Dev Drive 1"
        DevDrive: true
        AllowDestructive: true
        FSFormat: "ReFS"
        Size: "50Gb"

    # Install Git
    # The standard Git version control system for Windows
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Git.Git
      directives:
        allowPrerelease: true
      settings:
        id: Git.Git

    # Install GitHub CLI
    # Command line tool for interacting with GitHub repositories
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: GitHub.cli
      directives:
        allowPrerelease: true
      settings:
        id: GitHub.cli

    # Install GitHub Desktop
    # GUI application for managing GitHub repositories
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: GitHub.GitHubDesktop
      directives:
        allowPrerelease: true
      settings:
        id: GitHub.GitHubDesktop

    # Install .NET SDK 9
    # Development kit for building .NET 9 applications
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.DotNet.SDK.9
      directives:
        allowPrerelease: true
      settings:
        id: Microsoft.DotNet.SDK.9

    # Install .NET Runtime 9
    # Runtime environment for running .NET 9 applications
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.DotNet.Runtime.9
      directives:
        allowPrerelease: true
      settings:
        id: Microsoft.DotNet.Runtime.9

    # Install Visual Studio Code
    # Source code editor for development
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.VisualStudioCode
      directives:
        allowPrerelease: true
      settings:
        id: Microsoft.VisualStudioCode
