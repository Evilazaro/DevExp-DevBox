# yaml-language-server: $schema=https://aka.ms/configuration-dsc-schema/0.2
#
# Azure DevBox Common Configuration
# =================================
#
# Purpose:
#   This DSC configuration sets up a standard development environment with:
#   - Development storage using Dev Drive
#   - Source control tools (Git, GitHub CLI)
#   - Development runtimes (.NET 9 SDK and Runtime)
#   - Development tools (VS Code, Node.js)
#
# Prerequisites:
#   - Windows 10/11 with admin privileges
#   - Internet connectivity for package downloads
#
# Maintainers: DevExp Team

properties:
  configurationVersion: "0.2.0"
  resources:
    #----------------------------------------------
    # Storage Configuration
    #----------------------------------------------
    # Dev Drive provides optimized filesystem performance for development workloads
    # with ReFS features like integrity streams and block cloning for Git operations
    - resource: Disk
      id: DevDrive1
      directives:
        module: StorageDsc
        allowPrerelease: true
        description: Configure Dev Drive with ReFS format
      settings:
        DiskId: "0" # First available disk (verify this matches your environment)
        DiskIdType: "Number"
        DriveLetter: "Z" # Standard letter for development drives
        FSLabel: "Dev Drive 1"
        DevDrive: true # Enables Windows Dev Drive optimizations
        AllowDestructive: true # Warning: Will format existing disk if present
        FSFormat: "ReFS" # Required for Dev Drive functionality
        Size: "50Gb" # Recommended minimum size for development workloads

    #----------------------------------------------
    # Source Control Tools
    #----------------------------------------------
    # Git - Distributed version control system
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Git.Git
      directives:
        allowPrerelease: true
        description: Install Git version control system
      settings:
        id: Git.Git

    # GitHub CLI - Command-line tool for GitHub workflow automation
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: GitHub.cli
      directives:
        allowPrerelease: true
        description: Install GitHub command-line interface
      settings:
        id: GitHub.cli
      dependsOn:
        - Git.Git # Requires Git for full functionality

    #----------------------------------------------
    # Development Runtimes
    #----------------------------------------------
    # .NET SDK 9 - Development kit for building .NET applications
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.DotNet.SDK.9
      directives:
        allowPrerelease: true
        description: Install .NET 9 SDK for application development
      settings:
        id: Microsoft.DotNet.SDK.9

    # .NET Runtime 9 - Runtime for executing .NET applications
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.DotNet.Runtime.9
      directives:
        allowPrerelease: true
        description: Install .NET 9 Runtime
      settings:
        id: Microsoft.DotNet.Runtime.9
      dependsOn:
        - Microsoft.DotNet.SDK.9 # Runtime is included in SDK, but explicit dependency ensures correct order

    # Node.js - JavaScript runtime environment
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: OpenJS.NodeJS
      directives:
        allowPrerelease: true
        description: Install Node.js JavaScript runtime
      settings:
        id: OpenJS.NodeJS

    #----------------------------------------------
    # Development Tools
    #----------------------------------------------
    # Visual Studio Code - Lightweight code editor
    - resource: Microsoft.WinGet.DSC/WinGetPackage
      id: Microsoft.VisualStudioCode
      directives:
        allowPrerelease: true
        description: Install Visual Studio Code editor
      settings:
        id: Microsoft.VisualStudioCode
