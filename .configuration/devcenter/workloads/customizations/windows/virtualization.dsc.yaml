# yaml-language-server: $schema=https://raw.githubusercontent.com/microsoft/winget-cli/refs/heads/master/schemas/JSON/configuration/configuration.schema.0.2.json

properties:
  configurationVersion: 0.2.0

  ########################################
  ### RESOURCES: System Configuration
  ### Install: WSL and Ubuntu
  ########################################
  resources:
    ### Install Windows Subsystem for Linux (WSL)
    ### -------------------------------------
    - resource: PSDscResources/Script
      id: Microsoft-Windows-Subsystem-Linux
      directives:
        description: Enable Windows Features and Install Ubuntu for WSL
        elevated: true
      settings:
        SetScript: |
          try {
              Write-Verbose "Setting environment path"
              $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
              Write-Verbose "Installing Windows Subsystem for Linux (WSL)"
              wsl --install --no-launch
              Write-Host "WSL installed successfully."
          } catch {
              Write-Error "Failed to install WSL: $_"
          }
        GetScript: |
          try {
              $wslInstalled = (wsl --list) -match "Windows Subsystem for Linux"
              return @{ Installed = $wslInstalled }
          } catch {
              return @{ Installed = $false }
          }
        TestScript: |
          try {
              return (wsl --list) -match "Windows Subsystem for Linux"
          } catch {
              return $false
          }

    ### Install Ubuntu for WSL
    ### -------------------------------------
    - resource: PSDscResources/Script
      id: Ubuntu
      directives:
        description: Install Ubuntu for WSL
        elevated: true
      settings:
        SetScript: |
          try {
              Write-Verbose "Setting environment path"
              $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
              Write-Verbose "Installing Ubuntu for WSL"
              wsl --install -d Ubuntu
              Write-Host "Ubuntu installed successfully."
          } catch {
              Write-Error "Failed to install Ubuntu: $_"
          }
        GetScript: |
          try {
              $ubuntuInstalled = (wsl --list) -match "Ubuntu"
              return @{ Installed = $ubuntuInstalled }
          } catch {
              return @{ Installed = $false }
          }
        TestScript: |
          try {
              return (wsl --list) -match "Ubuntu"
          } catch {
              return $false
          }
      dependsOn:
        - Microsoft-Windows-Subsystem-Linux