$schema: "1.0"
name: "devbox-backend-winget"
description: "Customize the backend workload for the devbox"
tasks:
  - name: powershell
    description: "Windows Subsystem for Linux"
    parameters:
      command: "wsl --install -d Ubuntu --no-launch"
      runAsUser: true
  - name: winget
    description: "Install App Microsoft.AppInstaller"
    parameters:
      package: "Microsoft.AppInstaller"
      runAsUser: true
  - name: winget
    description: "Install App Microsoft.PowerToys"
    parameters:
      package: Microsoft.PowerToys
      runAsUser: true
  - name: winget
    description: "Install App Microsoft.DotNet.SDK.8"
    parameters:
      package: Microsoft.DotNet.SDK.8
      runAsUser: true
  - name: winget
    description: "Install App Microsoft.DotNet.Runtime.8"
    parameters:
      package: Microsoft.DotNet.Runtime.8
      runAsUser: true
  - name: winget
    description: "Install App Microsoft.WindowsTerminal"
    parameters:
      package: Microsoft.WindowsTerminal
      runAsUser: true
  - name: winget
    description: "Install App Microsoft.AzureCLI"
    parameters:
      package: Microsoft.AzureCLI
      runAsUser: true
  - name: winget
    description: "Install App Microsoft.Azd"
    parameters:
      package: Microsoft.Azd
      runAsUser: true
  - name: winget
    description: "Install App OpenJS.NodeJS"
    parameters:
      package: OpenJS.NodeJS
      runAsUser: true
  - name: winget
    description: "Install App Microsoft.Azure.FunctionsCoreTools"
    parameters:
      package: Microsoft.Azure.FunctionsCoreTools
      runAsUser: true
  - name: winget
    description: "Install App Git.Git"
    parameters:
      package: Git.Git
      runAsUser: true
  - name: winget
    description: "Install App GitHub.cli"
    parameters:
      package: GitHub.cli
      runAsUser: true
  - name: winget
    description: "Install App GitHub.GitHubDesktop"
    parameters:
      package: GitHub.GitHubDesktop
      runAsUser: true
  - name: winget
    description: "Install App Microsoft.VisualStudioCode"
    parameters:
      package: Microsoft.VisualStudioCode
      runAsUser: true
  - name: winget
    description: "Install App Microsoft.VisualStudio.2022.Enterprise"
    parameters:
      package: Microsoft.VisualStudio.2022.Enterprise
      runAsUser: true
  - name: winget
    description: "Install App Postman.Postman"
    parameters:
      package: "Postman.Postman"
      runAsUser: true
  - name: winget
    description: "Install App Docker.DockerDesktop"
    parameters:
      package: Docker.DockerDesktop
      runAsUser: true
  - name: winget
    description: "Install App paolosalvatori.ServiceBusExplorer"
    parameters:
      package: paolosalvatori.ServiceBusExplorer
      runAsUser: true
  - name: winget
    description: "Install App Microsoft.Azure.StorageExplorer"
    parameters:
      package: Microsoft.Azure.StorageExplorer
      runAsUser: true
  - name: winget
    description: "Install App Microsoft.RemoteDesktopClient"
    parameters:
      package: Microsoft.RemoteDesktopClient
      runAsUser: true
  - name: powershell
    description: "Install VS Code extensions"
    parameters:
      command: |
        "Set-ExecutionPolicy Bypass -Scope Process -Force; 
        function InstallVSCodeExtensions {
            try {
                Write-Host 'Installing VSCode extensions...'

                $extensions = @(
                    'ms-vscode-remote.remote-wsl',
                    'ms-vscode.PowerShell',
                    'ms-vscode.vscode-node-azure-pack',
                    'GitHub.copilot',
                    'GitHub.vscode-pull-request-github',
                    'GitHub.copilot-chat',
                    'GitHub.remotehub',
                    'GitHub.vscode-github-actions',
                    'eamodio.gitlens-insiders',
                    'ms-vscode.azure-repos',
                    'ms-azure-devops.azure-pipelines',
                    'ms-azuretools.vscode-docker',
                    'ms-kubernetes-tools.vscode-kubernetes-tools',
                    'ms-kubernetes-tools.vscode-aks-tools',
                    'ms-azuretools.vscode-azurecontainerapps',
                    'ms-azuretools.vscode-azurefunctions',
                    'ms-azuretools.vscode-apimanagement'
                )

                foreach ($extension in $extensions) {
                    code --install-extension $extension --force
                }

                Write-Host 'VSCode extensions have been installed successfully.'
            }
            catch {
                Write-Host 'Failed to install VSCode extensions: $_' -Level 'ERROR'
            }
        }

        InstallVSCodeExtensions"
      runAsUser: true
  - name: powershell
    description: "Update dotnet workloads"
    parameters:
      command: "dotnet workload update"
      runAsUser: true
  - name: powershell
    description: "Update all winget packages"
    parameters:
      command: "winget upgrade --all"
      runAsUser: true
  - name: git-clone
    description: "Clone the eShopRepository repository"
    parameters:
      repository: "https://github.com/Evilazaro/eShop"
      branch: "main"
      directory: $"C:\Workspaces\eShop"
  - name: git-clone
    description: "Clone the DevBox repository"
    parameters:
      repository: "https://github.com/Evilazaro/MicrosoftDevBox"
      branch: "main"
      directory: $"C:\Workspaces\MicrosoftDevBox"
  - name: git-clone
    description: "Clone the Contoso Traders repository"
    parameters:
      repository: "https://github.com/Evilazaro/ContosoTraders.git"
      branch: "main"
      directory: $"C:\Workspaces\ContosoTraders"