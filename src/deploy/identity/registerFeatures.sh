#!/bin/bash

set -e
set -o nounset
set -o pipefail

# Check if Azure CLI is installed.
checkAzureCli() {
    if ! command -v az &> /dev/null; then
        echo "Error: 'az' command is not found. Please ensure Azure CLI is installed."
        exit 1
    else
        echo "'az' command is available. Continuing with the script..."
    fi
}

# Register a given Azure provider.
registerAzureProvider() {
    local providerName="$1"
    
    echo "Starting registration for $providerName..."
    
    if az provider register -n "$providerName"; then
        echo "Successfully registered $providerName."
    else
        echo "Failed to register $providerName."
        exit 1
    fi
}

main() {
    echo "Beginning Azure Resource Providers registration..."
    
    # Check Azure CLI installation
    checkAzureCli

    # Define providers and their descriptions
    local azureProviders=(
    "Microsoft.Storage"
    "Microsoft.Advisor"
    "Microsoft.Management"
    "Microsoft.ChangeAnalysis"
    "Microsoft.CognitiveServices"
    "Microsoft.MarketplaceNotifications"
    "Microsoft.DevCenter"
    "Microsoft.Compute"
    "Microsoft.AlertsManagement"
    "Microsoft.ResourceHealth"
    "Microsoft.VirtualMachineImages"
    "Microsoft.Web"
    "Microsoft.CloudShell"
    "Microsoft.AppConfiguration"
    "Microsoft.ContainerInstance"
    "Microsoft.DesktopVirtualization"
    "Microsoft.AAD"
    "Microsoft.GraphServices"
    "Microsoft.AzureActiveDirectory"
    "Microsoft.EnterpriseSupport"
    "Microsoft.ContainerRegistry"
    "Microsoft.ContainerService"
    "Microsoft.DocumentDB"
    "Microsoft.Cache"
    "Microsoft.ServiceBus"
    "Microsoft.Sql"
    "Microsoft.Cdn"
    "Microsoft.Search"
    "Microsoft.ManagedServices"
    "microsoft.insights"
    "Microsoft.Automation"
    "Microsoft.OperationalInsights"
    "Microsoft.Network"
    "Microsoft.OperationsManagement"
    "Microsoft.ManagedIdentity"
    "Microsoft.Logic"
    "Microsoft.Security"
    "Microsoft.PolicyInsights"
    "Microsoft.ApiManagement"
    "Microsoft.EventGrid"
    "Microsoft.KeyVault"
    "Microsoft.GuestConfiguration"
    "Microsoft.Dashboard"
    "Microsoft.Monitor"
    "Microsoft.SaaS"
    "Astronomer.Astro"
    "Dynatrace.Observability"
    "GitHub.Network"
    "Informatica.DataManagement"
    "Microsoft.AadCustomSecurityAttributesDiagnosticSettings"
    "microsoft.aadiam"
    "Microsoft.Addons"
    "Microsoft.ADHybridHealthService"
    "Microsoft.AgFoodPlatform"
    "Microsoft.AnalysisServices"
    "Microsoft.AnyBuild"
    "Microsoft.ApiCenter"
    "Microsoft.App"
    "Microsoft.AppAssessment"
    "Microsoft.AppComplianceAutomation"
    "Microsoft.AppPlatform"
    "Microsoft.AppSecurity"
    "Microsoft.ArcNetworking"
    "Microsoft.Attestation"
    "Microsoft.Authorization"
    "Microsoft.Automanage"
    "Microsoft.AutonomousDevelopmentPlatform"
    "Microsoft.AVS"
    "Microsoft.AwsConnector"
    "Microsoft.AzureArcData"
    "Microsoft.AzureBusinessContinuity"
    "Microsoft.AzureDataTransfer"
    "Microsoft.AzureFleet"
    "Microsoft.AzureLargeInstance"
    "Microsoft.AzurePlaywrightService"
    "Microsoft.AzureScan"
    "Microsoft.AzureSphere"
    "Microsoft.AzureStack"
    "Microsoft.AzureStackHCI"
    "Microsoft.BackupSolutions"
    "Microsoft.BareMetal"
    "Microsoft.BareMetalInfrastructure"
    "Microsoft.Batch"
    "Microsoft.Billing"
    "Microsoft.BillingBenefits"
    "Microsoft.Bing"
    "Microsoft.BlockchainTokens"
    "Microsoft.Blueprint"
    "Microsoft.BotService"
    "Microsoft.Capacity"
    "Microsoft.CapacityAllocation"
    "Microsoft.Carbon"
    "Microsoft.CertificateRegistration"
    "Microsoft.Certify"
    "Microsoft.Chaos"
    "Microsoft.ClassicCompute"
    "Microsoft.ClassicInfrastructureMigrate"
    "Microsoft.ClassicNetwork"
    "Microsoft.ClassicStorage"
    "Microsoft.ClassicSubscription"
    "Microsoft.CleanRoom"
    "Microsoft.CloudHealth"
    "Microsoft.CloudTest"
    "Microsoft.CodeSigning"
    "Microsoft.Commerce"
    "Microsoft.Communication"
    "Microsoft.Community"
    "Microsoft.CompositeSolutions"
    "Microsoft.ComputeSchedule"
    "Microsoft.ConfidentialLedger"
    "Microsoft.Confluent"
    "Microsoft.ConnectedCache"
    "Microsoft.ConnectedCredentials"
    "microsoft.connectedopenstack"
    "Microsoft.ConnectedVehicle"
    "Microsoft.ConnectedVMwarevSphere"
    "Microsoft.Consumption"
    "Microsoft.CostManagement"
    "Microsoft.CostManagementExports"
    "Microsoft.CustomerLockbox"
    "Microsoft.CustomProviders"
    "Microsoft.D365CustomerInsights"
    "Microsoft.DatabaseFleetManager"
    "Microsoft.DatabaseWatcher"
    "Microsoft.DataBox"
    "Microsoft.DataBoxEdge"
    "Microsoft.Databricks"
    "Microsoft.Datadog"
    "Microsoft.DataFactory"
    "Microsoft.DataLakeAnalytics"
    "Microsoft.DataLakeStore"
    "Microsoft.DataMigration"
    "Microsoft.DataProtection"
    "Microsoft.DataReplication"
    "Microsoft.DataShare"
    "Microsoft.DBforMariaDB"
    "Microsoft.DBforMySQL"
    "Microsoft.DBforPostgreSQL"
    "Microsoft.DelegatedNetwork"
    "Microsoft.DevHub"
    "Microsoft.DeviceRegistry"
    "Microsoft.Devices"
    "Microsoft.DeviceUpdate"
    "Microsoft.DevOpsInfrastructure"
    "Microsoft.DevTestLab"
    "Microsoft.DigitalTwins"
    "Microsoft.DomainRegistration"
    "Microsoft.DurableTask"
    "Microsoft.Easm"
    "Microsoft.Edge"
    "Microsoft.EdgeManagement"
    "Microsoft.EdgeMarketplace"
    "Microsoft.EdgeOrder"
    "Microsoft.EdgeOrderPartner"
    "Microsoft.EdgeZones"
    "Microsoft.Elastic"
    "Microsoft.ElasticSan"
    "Microsoft.EntitlementManagement"
    "Microsoft.EventHub"
    "Microsoft.Experimentation"
    "Microsoft.ExtendedLocation"
    "Microsoft.Fabric"
    "Microsoft.Falcon"
    "Microsoft.Features"
    "Microsoft.FluidRelay"
    "Microsoft.HanaOnAzure"
    "Microsoft.Hardware"
    "Microsoft.HardwareSecurityModules"
    "Microsoft.HDInsight"
    "Microsoft.HealthBot"
    "Microsoft.HealthcareApis"
    "Microsoft.HealthDataAIServices"
    "Microsoft.HealthModel"
    "Microsoft.Help"
    "Microsoft.HybridCloud"
    "Microsoft.HybridCompute"
    "Microsoft.HybridConnectivity"
    "Microsoft.HybridContainerService"
    "Microsoft.HybridNetwork"
    "Microsoft.Impact"
    "Microsoft.IntegrationSpaces"
    "Microsoft.Inventory"
    "Microsoft.IoTCentral"
    "Microsoft.IoTFirmwareDefense"
    "Microsoft.IoTOperations"
    "Microsoft.IoTOperationsDataProcessor"
    "Microsoft.IoTOperationsMQ"
    "Microsoft.IoTOperationsOrchestrator"
    "Microsoft.IoTSecurity"
    "Microsoft.Kubernetes"
    "Microsoft.KubernetesConfiguration"
    "Microsoft.KubernetesRuntime"
    "Microsoft.Kusto"
    "Microsoft.LabServices"
    "Microsoft.LoadTestService"
    "Microsoft.Logz"
    "Microsoft.MachineLearning"
    "Microsoft.MachineLearningServices"
    "Microsoft.Maintenance"
    "Microsoft.ManagedNetworkFabric"
    "Microsoft.ManufacturingPlatform"
    "Microsoft.Maps"
    "Microsoft.Marketplace"
    "Microsoft.MarketplaceOrdering"
    "Microsoft.Media"
    "Microsoft.MessagingCatalog"
    "Microsoft.MessagingConnectors"
    "Microsoft.Migrate"
    "Microsoft.Mission"
    "Microsoft.MixedReality"
    "Microsoft.MobileNetwork"
    "Microsoft.MobilePacketCore"
    "Microsoft.ModSimWorkbench"
    "Microsoft.MySQLDiscovery"
    "Microsoft.NetApp"
    "Microsoft.NetworkAnalytics"
    "Microsoft.NetworkCloud"
    "Microsoft.NetworkFunction"
    "Microsoft.NexusIdentity"
    "Microsoft.NotificationHubs"
    "Microsoft.Nutanix"
    "Microsoft.ObjectStore"
    "Microsoft.OffAzure"
    "Microsoft.OffAzureSpringBoot"
    "Microsoft.OpenEnergyPlatform"
    "Microsoft.OperatorVoicemail"
    "Microsoft.OracleDiscovery"
    "Microsoft.Orbital"
    "Microsoft.PartnerManagedConsumerRecurrence"
    "Microsoft.Peering"
    "Microsoft.Pki"
    "Microsoft.Portal"
    "Microsoft.PowerBI"
    "Microsoft.PowerBIDedicated"
    "Microsoft.PowerPlatform"
    "Microsoft.ProfessionalService"
    "Microsoft.ProgrammableConnectivity"
    "Microsoft.ProviderHub"
    "Microsoft.Purview"
    "Microsoft.Quantum"
    "Microsoft.Quota"
    "Microsoft.RecommendationsService"
    "Microsoft.RecoveryServices"
    "Microsoft.RedHatOpenShift"
    "Microsoft.Relay"
    "Microsoft.ResourceConnector"
    "Microsoft.ResourceGraph"
    "Microsoft.ResourceNotifications"
    "Microsoft.Resources"
    "Microsoft.SaaSHub"
    "Microsoft.Scom"
    "Microsoft.ScVmm"
    "Microsoft.SecurityCopilot"
    "Microsoft.SecurityDetonation"
    "Microsoft.SecurityInsights"
    "Microsoft.SerialConsole"
    "Microsoft.ServiceFabric"
    "Microsoft.ServiceFabricMesh"
    "Microsoft.ServiceLinker"
    "Microsoft.ServiceNetworking"
    "Microsoft.ServicesHub"
    "Microsoft.SignalRService"
    "Microsoft.Singularity"
    "Microsoft.SoftwarePlan"
    "Microsoft.Solutions"
    "Microsoft.Sovereign"
    "Microsoft.SqlVirtualMachine"
    "Microsoft.StandbyPool"
    "Microsoft.StorageActions"
    "Microsoft.StorageCache"
    "Microsoft.StorageMover"
    "Microsoft.StorageSync"
    "Microsoft.StorageTasks"
    "Microsoft.StreamAnalytics"
    "Microsoft.Subscription"
    "microsoft.support"
    "Microsoft.Synapse"
    "Microsoft.Syntex"
    "Microsoft.ToolchainOrchestrator"
    "Microsoft.UsageBilling"
    "Microsoft.VerifiedId"
    "Microsoft.VideoIndexer"
    "microsoft.visualstudio"
    "Microsoft.VMware"
    "Microsoft.VoiceServices"
    "Microsoft.WindowsPushNotificationServices"
    "Microsoft.WorkloadBuilder"
    "Microsoft.Workloads"
)

    # Register each provider
    for index in "${!azureProviders[@]}"; do
        registerAzureProvider "${azureProviders[$index]}"
    done

    # Add devcenter extension
    az extension add --name devcenter

    echo "Azure Resource Providers registration process completed."
}

# Execute the main function
main
